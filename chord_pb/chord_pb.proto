syntax = "proto3";
package chord_pb;

option go_package = "./chord_pb";


service ChordNode {
    rpc Join(NodeAddr) returns (NodeAddr) {} // Return found successor
    rpc FindSuccessor(NodeId) returns (FindFindSuccessorResp) {}
    rpc GetPredecessor(Empty) returns (NodeAddr) {} // Return found predecessor
    rpc Notify(NodeAddr) returns (Empty) {} // Could consider adding a sequence number
    
    // rpc GetNodeInfo(NodeAddr) returns (NodeInfo) {} // Return full info of the node
    
    rpc MapGet(Key) returns (KeyVal) {}
    rpc MapPut(KeyVal) returns (KeyVal) {}
    rpc MapDelete(Key) returns (Key) {}
}

message KeyVal {
    string key = 1;
    string val = 2;
}

message Key {
    string key = 1;
}

message NodeId {
    bytes id = 1;
}


message NodeAddr {
    bytes hash = 1;
    string addr = 2;
}

message FindFindSuccessorResp {
    bool found = 1;
    NodeAddr addr = 2;
}

message Empty {
    bool empty = 1;
}