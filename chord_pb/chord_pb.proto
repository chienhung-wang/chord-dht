syntax = "proto3";
package chord_pb;

option go_package = "./chord_pb";


service ChordNode {
    // rpc Join(NodeAddr) returns (NodeAddr) {} // Return found successor
    // rpc GetPred(NodeAddr) returns (NodeAddr) {} // Return found predecessor
    // rpc GetNodeInfo(NodeAddr) returns (NodeInfo) {} // Return full info of the node
    // rpc Notify(NodeAddr) returns (NodeInfo) {} //  Return full info of the new successor
    rpc MapGet(Key) returns (KeyVal) {}
    rpc MapPut(KeyVal) returns (KeyVal) {}
    rpc MapDelete(Key) returns (Key) {}
}

message KeyVal {
    string key = 1;
    string val = 2;
}

message Key {
    string key = 1;
}


// message NodeAddr {
//     int32 hash = 1;
//     string host = 2;
//     string port = 3;
// }


// message FingerTable {
//     repeated NodeAddr nodeAddr = 1;
// }


// message NodeInfo {
//     NodeAddr pred = 1;
//     FingerTable fingerTable = 2;
// }